Описание
===========
DocFetcher ­– это приложение с открытым исходным кодом, позволяющее вам совершать поиск по содержанию файлов на вашем компьютере. &mdash; вы можете считать это чем-то вроде Google для ваших файлов. Приложение работает на Windows, Linux и Mac OS&nbsp;X. Приложение распространяется по лицензии [Eclipse Public License](http://en.wikipedia.org/wiki/Eclipse_Public_License).

Основы использования.
===========
Приведённые ниже скриншоты отображают основной пользовательский интерфейс. Поисковые запросы вводятся в текстовое поле (1). Результаты поиска отображаются в панели результатов (2). Панель предпросмотра (3) отображает текстовый предпросмотр файла, выделенного в панели результатов. Все совпадения выделены жёлтым.

Вы можете фильтровать результаты указав минимальный или максимальный размер файла (4), тип файла (5) и его местоположение (6). Кнопки, отмеченные цифрой (7), используются для вызова руководства, настроек и свёртывания программы в трей.

<div id="img" style="text-align: center;"><a href="../all/intro-001-results-edited.png"><img style="width: 500px; height: 375px;" src="../all/intro-001-results-edited.png"></a></div>

Для работы DocFetcher необходимо создать так называемые индексы для тех папок, в которых вы хотите осуществлять поиск. Что такое индексация и как она работает подробнее описано ниже. Вкратце, индекс позволят DocFetcher быстро (счёт идёт в милисекундах) определить, в каких файлах содержится определённый набор слов, поэтому ускоряется скорость поиска. Данный скриншот показывает диалог DocFetcher по созданию новых индексов.

<div id="img" style="text-align: center;"><a href="../all/intro-002-config.png"><img style="width: 500px; height: 375px;" src="../all/intro-002-config.png"></a></div>

Нажатие на кнопку «Запуск» внизу этого диалогового окна запускает индексацию. Процесс индексирования может занять некоторое время, в зависимости от количества и размера файлов для индексирования. 

Создание индекса занимает время только один раз для каждой папки. *Обновление* индекса после изменения содержимого папки происходит гораздо быстрее. Этот процесс обычно занимает несколько секунд.

Примечательные особенности
================
* **Портативная версия**: Портативная версия DocFetcher работает на Windows, Linux *и* Mac OS&nbsp;X.Полезность такой версии подробнее описана ниже.
* **Поддержка 64-битных систем**: Поддерживаются как 32-битные, так и 64-битные операционные системы.
* **Поддержка Unicode**: DocFetcher поддерживает Unicode для всех основных форматов, включая Microsoft Office, OpenOffice.org, PDF, HTML, RTF и простые текстовые файлы. Исключение составляет лишь формат CHM, для которого поддержка Unicode ещё не реализована.
* **Поддержка архивов**: DocFetcher поддерживает следующие форматы архивов: zip, 7z, rar, и всё семейство архивов tar.*. Список расширений файлов для zip-архивов может быть изменён, что позволит вам добавить поддержку больших форматов, основанных на zip. Кроме того, DocFetcher может справиться с неограниченным количеством вложенных архивов.
* **Поиск в файлах исходных кодов**: Расширения файлов, в которых DocFetcher распознаёт обычный текст, может быть изменён, это позволит вам использовать DocFetcher для поиска в исходном коде любого вида и других форматах, основанных на тексте. (Это отлично работает в сочетании с изменяемыми zip-расширениями, например для поиска в исходном коде Java внутри файлов Jar)
* **Файлы Outlook PST**: DocFetcher позволяет осуществлять поиск по письмам Outlook, которые обычно хранятся в файлах PST.
* **Определение HTML-пар** DocFetcher по умолчанию определяет пары HTML-файлов (например, файл под названием «foo.html» и папка под названием «foo_files») и рассматривает пары как один документ. На первый взгляд эта функция может показаться бесполезной, но потом оказывается, что она гигантски увеличивает производительность, когда вы имеете  дело с HTML-файлами, так как вся «неразбериха» из HTML-папок пропадает из результатов.
* **Исключения файлов из индекса на основе регулярных выражений**: Вы можете использовать регулярные выражения, чтобы исключить определённые файлы из индекса. Например, чтобы исключить файлы Microsoft Excel, вы можете использовать регулярное выражение вроде этого: `.*\.xls`
* **Определение MIME-типов**: вы можете использовать регулярные выражения, чтобы включить «определение MIME-типов» ля определённых файлов, что будет означать, что DocFetcher будет пытаться определить тип файла не просто по названию этого файла, но и по содержимому.
* **Мощный синтаксис запросов**: В дополнение к стандартным выражениям типа 'OR', 'AND' и 'NOT', DocFetcher также поддерживает шаблоны подстановки, поиск фраз, нечёткий поиск («найти слова, похожие на данное»), поиск по соседству («эти два слова должны бы на расстояние не более чем в 10 слов друг от друга»), повышение («повысить оценку документов, содержащих…»)

Поддерживаемые форматы документов
==========================
* Microsoft Office (doc, xls, ppt)
* Microsoft Office 2007 и новее (docx, xlsx, pptx, docm, xlsm, pptm)
* Microsoft Outlook (pst)
* OpenOffice.org (odt, ods, odg, odp, ott, ots, otg, otp)
* Portable Document Format (pdf)
* HTML (html, xhtml, ...)
* Plain text (customizable)
* Rich Text Format (rtf)
* AbiWord (abw, abw.gz, zabw)
* Microsoft Compiled HTML Help (chm)
* MP3 Metadata (mp3)
* FLAC Metadata (flac)
* JPEG Exif Metadata (jpg, jpeg)
* Microsoft Visio (vsd)
* Scalable Vector Graphics (svg)

А вот, что некоторые люди думают об этой программе…
=========================================
${awards_table}

Кроме того, DocFetcher получил одобрительный рейтинг на [нашей странице Sourceforge.net](http://sourceforge.net/projects/docfetcher/reviews).

Сравнение с другими приложениями похожего функционала.
===============================================
Вот чем выделяется DocFetcher на фоне других приложений по поиску на локальном компьютере:

**Отсутсвие мусора**: Мы стараемся держать интерефейс DocFetcher свободным от суеты и мусора. Никакой рекламы и всплывающих окон с предложением зарегестрироваться. Ничего ненужного не устанавливается в ваш браузер, реестр или ещё куда-нибудь.

**Приватность** DocFetcher не собирает вашу личную информацию. Никакую и никогда. Если у кого-то возникнут в этом сомнения, он может проверить это в нашем открытом [исходном коде](http://docfetcher.sourceforge.net/wiki/doku.php?id=source_code).

**Бесплатно навсегда**: Так как DocFetcher имеет всегда доступный открытый исходный код, вам не стоит бояться, что программа когда-нибудь устареет и перестанет развиваться. Говоря о поддержке, слышали ли вы о том, что Google Desktop, один из основных коммерческих конкурентов DocFetcher перестал разрабатываться в 2011? Итак…

**Кроссплатформенность**: В отличие от многих конкурентов, DocFetcher работает не только на Windows, но и на Linux, и на Mac OS&nbsp;X. Таким образом, если вы когда-нибудь решите перейти с одной платформы на другую, DocFetcher будет ждать вас там.

**Портативность*: Один из главных плюсов Docfetcher ­– это портативность. В общем, вы можете создать полноценный доступный для поиска репозиторий документов на USB-носителе. Подробнее в следующем разделе.

**Индексирование только необходимых документов**: Среди коммерческих конкурентов DocFetcher наблюдается тенденция по побуждению пользователей сканировать жёсткий диск целиком&mdash; Возможно, это делается для того, чтобы лишить якобы «немого» пользователей вариантов действий, или, что ещё хуже, для того, чтобы собрать как можно больше пользовательских данных. Практика показывает, что большинство пользователей *не* хотят индексировать весь жёсткий диск: Не только из-за того, что это пустая трата времени и дискового пространства, но ещё и потому, что это засоряет поисковую выдачу ненужными файлами. DocFetcher же индексирует только те папки, на которые вы недвусмысленно укажете, кроме того, вам доступно множество опций фильтрации.

Портативные хранилища документов
==============================
Одна из выдающихся особенностей DocFetcher ­– это то, что он доступен в виде портативной версии, которая позволяет вам создавать *портативное хранилище документов* &mdash; полностью доступное для индекса и поиска хранилище ваших важных документов, которое вы можете взять с собой.

**Примеры использования**: Вот что вы можете делать с таким хранилищем документов: вы можете взять его с собой на USB-диске, записать его на CD в целях архивации, поместить его на защищённый раздел диска (рекомендуем использовать [TrueCrypt](http://www.truecrypt.org/)), синхронизировать его с множеством компьютеров через облачное хранилище вроде [DropBox](http://www.dropbox.com/). Кроме того, так как DocFetcher имеет открытый исходный код, вы можете распространять ваше хранилище файлов: Загрузить его и поделиться со всем миром, если у вас есть такое желание.

**Java: Производительность и портативность**: Особенностью программы, с которой многие могут поспорить является то, что DocFetcher написан с использованием Java, имеющей репутацию «медленной». Это было справедливо десять лет назад, но с тех пор производительность Java значительно возросла, [согласно Википедии](http://en.wikipedia.org/wiki/Java_%28software_platform%29#Performance). Как бы то ни было, Java позволяет одному и тому же пакету DocFetcher быть запущеным на Windows, Linux *и* Mac OS&nbsp;X &mdash; В то же время многие другие программы требуют разных пакетов для каждой платформы. В итоге вы можете, например, поместить ваше портативное хранилище документов на USB-диск, а потом получить доступ к нему из любой из вышеперечисленных операционных систем, убедившись, что в системе установлена Java.

Как работает индексация
==================
Данный раздел даёт базовое представление о том, что такое индексация и как она работает.

**Простой подход к поиску файлов**: Основной подход к поиску файлов – это просто «посещение» каждого файла в определённой папке один за одним. Это отлично подходит для поиска *только по именам файлов*, так как анализ имён файлов происходит очень быстро. Однако, это не подходит, когда вы хотите осуществить поиск по содержимому файлов, так как извлечение полного текст – более трудоёмкая задача, чем анализ имён файлов.

**Поиск, основанный на индексе**: Вот почему DocFetcher, выполняя поиск по содержимому, использует подход, называемый «индексация»: Основная идея заключается в том, что большинство файлов, в которых пользователи хотят осуществить поиск изменяются очень нечасто или не изменяются вообще. И, вместо извлечения всего текста каждый раз, более эффективным будет сделать извлечение текста из всех фалов лишь *однажды* и создать так называемый *индекс* из этого извлечённого текста. Это что-то вроде словаря, позволяющего находить файлы по словам, которые они содержат.

**Сравнение с телефонной книгой**: Для сравнения, подумайте, насколько более эффективно искать чей-то номер телефона в телефонной книге («индекс), а не обзванивать *каждый* возможный номер телефона с целью узнать, не является ли человек на другом конце провода тем, кого вы ищете. &mdash; Звонок кому-либо и извлечение текста из файла могут быть рассмотренны как «трудоёмкие операции». Кроме того, то, то люди не меняют свои номера очень часто, аналогично тому, что большинство фалов на компьютере очень редко изменяются, если вообще изменяются.

**Обновления индекса**: Конечно, индекс отображает только то состояние фалов, которое существовало, когда он был создан, не обязательно последнее состояние файлов. Таким образом, если индекс не соответсвует действительности, вы можете получить устаревшие результаты поиска, телефонная книга устаревает точно так же. Однако, это не проблема, так как мы знаем, что большинство фалов изменяются очень редко. Кроме того, DocFetcher может *автоматически* обновлять индексы: (1) Когда он запущен, он определяет изменённые файлы и, соответственно, обновляет их индексы. (2) Когда он не запущен, маленький фоновый процесс будет определять изменения в файлах и составлять список из файлов, требующих обновления индекса. DocFetcher обновит эти индексы при следующем запуске. Вы можете не беспокоиться об этом фоновом процессе: он действительно мало нагружает процессор и память, так как не делает ничего, кроме обнаружения изменения в папках, оставляя боле затратное обновления индекса DocFetcher.
